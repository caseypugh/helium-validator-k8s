#!/bin/bash
#
# Misc kubectl+validator helper include 
#

POD_NAME=validator
CONTAINER_NAME=validator
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

function label {
  local label=$1
  local color=$2
  echo "${color}${label}${NC}"
}

function container_validator_version {
  replica=$1
  kubectl exec -it $POD_NAME-$replica -c $CONTAINER_NAME -n $NAMESPACE -- /bin/sh -c "miner versions" | egrep -o "[0-9]+.[0-9]+.[0-9]+" | xargs
}

function get_miner_name {
  replica=$1
  kubectl exec -it $POD_NAME-$replica -c $CONTAINER_NAME -n $NAMESPACE -- /bin/sh -c "miner info name" | egrep -o "[a-z]+-[a-z]+-[a-z]+" | xargs
}

function get_miner_address {
  replica=$1
  kubectl exec -it $POD_NAME-$replica -c $CONTAINER_NAME -n $NAMESPACE -- /bin/sh -c "miner peer addr" | grep -oE "[0-9a-zA-Z]{6,}"
}

function is_in_consensus {
  replica=$1
  kubectl exec -it $POD_NAME-$replica -c $CONTAINER_NAME -n $NAMESPACE -- /bin/sh -c "miner info in_consensus"
}

function grafana_api {
  path=$1
  curl -s --user admin:prom-operator -H "Content-Type: application/json" http://localhost:${GRAFANA_PORT}${path}
}

function grafana_api_post {
  path=$1
  data=$2
  curl -s --user admin:prom-operator -H "Content-Type: application/json" --data $data "http://localhost:$GRAFANA_PORT$path"
}
