#!/usr/bin/env bash
#
# Misc kubectl+validator helper include
#

POD_NAME=validator
CONTAINER_NAME=validator
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

function label {
  local label=$1
  local color=$2
  echo "${color}${label}${NC}"
}

function container_validator_version {
  replica=$1
  kubectl exec -it $POD_NAME-$replica -c $CONTAINER_NAME -n $NAMESPACE -- /bin/sh -c "miner versions" | grep -oE "[0-9]+.[0-9]+.[0-9]+" | xargs
}

function get_miner_name {
  replica=$1
  kubectl exec -it $POD_NAME-$replica -c $CONTAINER_NAME -n $NAMESPACE -- /bin/sh -c "miner info name" | grep -oE "[a-z]+-[a-z]+-[a-z]+" | xargs
}

function get_miner_address {
  replica=$1
  kubectl exec -it $POD_NAME-$replica -c $CONTAINER_NAME -n $NAMESPACE -- /bin/sh -c "miner peer addr" | grep -oE "[0-9a-zA-Z]{6,}"
}

function is_in_consensus {
  replica=$1
  kubectl exec -it $POD_NAME-$replica -c $CONTAINER_NAME -n $NAMESPACE -- /bin/sh -c "miner info in_consensus"
}

# is the scripts/dashboard/monitor tunnel running? returns true/false
function grafana_check_if_running {
  (curl -s "http://localhost:${GRAFANA_PORT}/login" | grep Grafana >/dev/null)
}

function grafana_api {
  path=$1
  curl -s --user "admin:${GRAFANA_ADMIN_PASSWORD}" -H "Content-Type: application/json" "http://localhost:${GRAFANA_PORT}${path}"
}

function grafana_api_post {
  path=$1
  data=$2
  curl -s --user "admin:${GRAFANA_ADMIN_PASSWORD}" -H "Content-Type: application/json" --data "$data" "http://localhost:${GRAFANA_PORT}${path}"
}

# https://stackoverflow.com/questions/4023830/how-to-compare-two-strings-in-dot-separated-version-format-in-bash
function verlte() {
  [  "$1" = "`echo -e "$1\n$2" | sort -V | head -n1`" ]
}

function verlt() {
  [ "$1" = "$2" ] && return 1 || verlte $1 $2
}
